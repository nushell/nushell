on: [pull_request]

name: Continuous integration

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [all, default, minimal]
        rust:
          - stable
        include:
          - style: all
            flags: '--all-features'
          - style: default
            flags: ''
          - style: minimal
            flags: '--no-default-features'
        exclude:
          - platform: windows-latest
            style: default
          - platform: windows-latest
            style: minimal
          - platform: macos-latest
            style: default
          - platform: macos-latest
            style: minimal

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

      - name: Build Nushell
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.flags }}

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all ${{ matrix.flags }}


  python-virtualenv:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
        py:
          - py

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Install Nushell
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=. --no-default-features

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - run: python -m pip install tox

      - name: Install virtualenv
        run: |
          git clone https://github.com/kubouch/virtualenv.git && \
          cd virtualenv && \
          git checkout engine-q-update
        shell: bash

      - name: Test Nushell in virtualenv
        run: cd virtualenv && tox -e ${{ matrix.py }} -- -k nushell
        shell: bash
