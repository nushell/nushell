on:
  pull_request:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - main

name: continuous-integration


jobs:
  build-clippy:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [extra, default]
        rust:
          - stable
        include:
          - style: extra
            flags: "--features=extra"
          - style: default
            flags: ""
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.style }}v2 # increment this to bust the cache if needed

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Build Nushell
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.flags }}

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        style: [extra, default]
        rust:
          - stable
        include:
          - style: extra
            flags: "--features=extra"
          - style: default
            flags: ""
        exclude:
          - platform: windows-latest
            style: default
          - platform: macos-latest
            style: default

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.style }}v2 # increment this to bust the cache if needed

      - uses: taiki-e/install-action@nextest


      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          # TODO: can we get by without --all? That means *everything* including plugins gets built
          args: run --all ${{ matrix.flags }}

      - name: Doctests
        uses: actions-rs/cargo@v1
        with:
          command: test
          # TODO: can we get by without --workspace?? That means *everything* including plugins gets built
          args: --workspace --doc ${{ matrix.flags }}

  python-virtualenv:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
        py:
          - py

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: "1" # increment this to bust the cache if needed

      - name: Install Nushell
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --path=. --no-default-features --debug

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - run: python -m pip install tox

      - name: Install virtualenv
        run: |
          git clone https://github.com/kubouch/virtualenv.git && \
          cd virtualenv && \
          git checkout engine-q-update
        shell: bash

      - name: Test Nushell in virtualenv
        run: cd virtualenv && tox -e ${{ matrix.py }} -- -k nushell
        shell: bash

  # Build plugins on their own, without the rest of Nu. This helps with CI parallelization and
  # also helps test that the plugins build without any feature unification shenanigans
  plugins:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
        rust:
          - stable

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: "2" # increment this to bust the cache if needed

      - name: Build nu_plugin_example
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nu_plugin_example

      - name: Clippy nu_plugin_example
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package nu_plugin_example ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

      - name: Build nu_plugin_gstat
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nu_plugin_gstat

      - name: Clippy nu_plugin_gstat
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package nu_plugin_gstat ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

      - name: Build nu_plugin_inc
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nu_plugin_inc

      - name: Clippy nu_plugin_inc
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package nu_plugin_inc ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

      - name: Build nu_plugin_query
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package nu_plugin_query

      - name: Clippy nu_plugin_query
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package nu_plugin_query ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect
