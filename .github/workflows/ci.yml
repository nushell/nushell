on:
  pull_request:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - main

name: continuous-integration

jobs:
  nu-fmt-clippy:
    strategy:
      fail-fast: true
      matrix:
        # Pinning to Ubuntu 20.04 because building on newer Ubuntu versions causes linux-gnu
        # builds to link against a too-new-for-many-Linux-installs glibc version. Consider
        # revisiting this when 20.04 is closer to EOL (April 2025)
        platform: [windows-latest, macos-latest, ubuntu-20.04]
        rust:
          - stable

    runs-on: ${{ matrix.platform }}
    env:
      NUSHELL_CARGO_TARGET: ci

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.3.4

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --workspace --exclude nu_plugin_* -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

  nu-tests:
    env:
      NUSHELL_CARGO_TARGET: ci

    strategy:
      fail-fast: true
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-20.04]
        style: [default, dataframe]
        rust:
          - stable
        include:
          - style: default
            flags: ""
          - style: dataframe
            flags: "--features=dataframe"
        exclude:
          # only test dataframes on Ubuntu (the fastest platform)
          - platform: windows-latest
            style: dataframe
          - platform: macos-latest
            style: dataframe

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.3.4

      - name: Tests
        run: cargo test --workspace --profile ci --exclude nu_plugin_* ${{ matrix.flags }}

  python-virtualenv:
    env:
      NUSHELL_CARGO_TARGET: ci

    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-20.04, macos-latest, windows-latest]
        rust:
          - stable
        py:
          - py

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.3.4

      - name: Install Nushell
        run: cargo install --locked --path=. --profile ci --no-default-features

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - run: python -m pip install tox

      - name: Install virtualenv
        run: git clone https://github.com/pypa/virtualenv.git
        shell: bash

      - name: Test Nushell in virtualenv
        run: cd virtualenv && tox -e ${{ matrix.py }} -- -k nushell
        shell: bash

  # Build+test plugins on their own, without the rest of Nu. This helps with CI parallelization and
  # also helps test that the plugins build without any feature unification shenanigans
  plugins:
    env:
      NUSHELL_CARGO_TARGET: ci

    strategy:
      fail-fast: true
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-20.04]
        rust:
          - stable

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1.3.4

      - name: Clippy
        run: cargo clippy --package nu_plugin_* ${{ matrix.flags }} -- -D warnings -D clippy::unwrap_used -A clippy::needless_collect

      - name: Tests
        run: cargo test --profile ci --package nu_plugin_*
