[package]
authors = ["The Nushell Project Developers"]
description = "Nushell's built-in commands"
edition = "2021"
license = "MIT"
name = "nu-command"
repository = "https://github.com/nushell/nushell/tree/main/crates/nu-command"
version = "0.80.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
bench = false

[dependencies]
nu-cmd-lang = { path = "../nu-cmd-lang", version = "0.80.1" }
nu-color-config = { path = "../nu-color-config", version = "0.80.1" }
nu-engine = { path = "../nu-engine", version = "0.80.1" }
nu-explore = { path = "../nu-explore", version = "0.80.1" }
nu-glob = { path = "../nu-glob", version = "0.80.1" }
nu-json = { path = "../nu-json", version = "0.80.1" }
nu-parser = { path = "../nu-parser", version = "0.80.1" }
nu-path = { path = "../nu-path", version = "0.80.1" }
nu-pretty-hex = { path = "../nu-pretty-hex", version = "0.80.1" }
nu-protocol = { path = "../nu-protocol", version = "0.80.1" }
nu-system = { path = "../nu-system", version = "0.80.1" }
nu-table = { path = "../nu-table", version = "0.80.1" }
nu-term-grid = { path = "../nu-term-grid", version = "0.80.1" }
nu-utils = { path = "../nu-utils", version = "0.80.1" }
num-format = { version = "0.4.3" }
nu-ansi-term = "0.47.0"

# Potential dependencies for extras
Inflector = "0.11"
alphanumeric-sort = "1.5.0"
atty = "0.2.14"
base64 = "0.21.0"
byteorder = "1.4.3"
bytesize = "1.2.0"
calamine = "0.19.1"
chrono = { version = "0.4.23", features = [
	"std",
	"unstable-locales",
], default-features = false }
chrono-humanize = "0.2.1"
chrono-tz = "0.8.1"
crossterm = "0.26"
csv = "1.2.0"
dialoguer = { default-features = false, features = ["fuzzy-select"], version = "0.10.3" }
digest = { default-features = false, version = "0.10.0" }
dtparse = "1.4.0"
encoding_rs = "0.8.30"
fancy-regex = "0.11.0"
filesize = "0.2.0"
filetime = "0.2.15"
fs_extra = "1.3.0"
htmlescape = "0.3.1"
indexmap = { version = "1.7", features = ["serde-1"] }
indicatif = "0.17.2"
is-root = "0.1.2"
itertools = "0.10.0"
log = "0.4.14"
lscolors = { version = "0.14", default-features = false, features = ["nu-ansi-term"] }
md5 = { package = "md-5", version = "0.10.0" }
miette = { version = "5.7.0", features = ["fancy-no-backtrace"] }
mime = "0.3.16"
mime_guess = "2.0.4"
notify = "4.0.17"
num = { version = "0.4.0", optional = true }
num-traits = "0.2.14"
once_cell = "1.17"
open = "4.0.2"
pathdiff = "0.2.1"
powierza-coefficient = "1.0.2"
quick-xml = "0.28"
rand = "0.8"
rayon = "1.7.0"
regex = "1.7.1"
ureq = { version = "2.6.2", default-features = false, features = [
	"json",
	"charset",
	"native-tls",
	"gzip",
] }
native-tls = "0.2.11"
roxmltree = "0.18.0"
rust-embed = "6.6.0"
same-file = "1.0.6"
serde = { version = "1.0.123", features = ["derive"] }
serde_json = "1.0"
serde_urlencoded = "0.7.0"
serde_yaml = "0.9.4"
sha2 = "0.10.0"
# Disable default features b/c the default features build Git (very slow to compile)
percent-encoding = "2.2.0"
rusqlite = { version = "0.28.0", features = ["bundled"], optional = true }
sqlparser = { version = "0.32.0", features = ["serde"], optional = true }
sysinfo = "0.28.2"
tabled = "0.12.0"
terminal_size = "0.2.1"
thiserror = "1.0.31"
titlecase = "2.0.0"
toml = "0.7.1"
unicode-segmentation = "1.10.0"
unicode-width = "0.1.10"
url = "2.2.1"
uuid = { version = "1.3.0", features = ["v4"] }
wax = { version = "0.5.0" }
which = { version = "4.4.0", optional = true }
print-positions = "0.6.1"
os_pipe = "1.1.3"

[target.'cfg(windows)'.dependencies]
winreg = "0.50.0"

[target.'cfg(unix)'.dependencies]
libc = "0.2"
umask = "2.1.0"
users = "0.11.0"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies.trash]
optional = true
version = "3.0.1"

[dependencies.polars]
features = [
	"arg_where",
	"checked_arithmetic",
	"concat_str",
	"cross_join",
	"csv",
	"cum_agg",
	"default",
	"dtype-categorical",
	"dtype-datetime",
	"dtype-struct",
	"dynamic_groupby",
	"ipc",
	"is_in",
	"json",
	"lazy",
	"object",
	"parquet",
	"random",
	"rolling_window",
	"rows",
	"serde",
	"serde-lazy",
	"strings",
	"strings",
	"to_dummies",
]
optional = true
version = "0.29.0"

[target.'cfg(windows)'.dependencies.windows]
features = ["Win32_Foundation", "Win32_Storage_FileSystem", "Win32_System_SystemServices"]
version = "0.48.0"

[features]
dataframe = ["num", "polars", "sqlparser"]
plugin = ["nu-parser/plugin"]
sqlite = [
	"rusqlite",
] # TODO: given that rusqlite is included in reedline, should we just always include it?
trash-support = ["trash"]
which-support = ["which"]

[dev-dependencies]
nu-test-support = { path = "../nu-test-support", version = "0.80.1" }
mockito = "1.0.0"

dirs-next = "2.0.0"
hamcrest2 = "0.3.0"
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
rstest = { version = "0.17.0", default-features = false }
