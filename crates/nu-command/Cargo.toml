[package]
authors = ["The Nushell Project Developers"]
description = "Nushell's built-in commands"
edition = "2021"
license = "MIT"
name = "nu-command"
repository = "https://github.com/nushell/nushell/tree/main/crates/nu-command"
version = "0.76.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
bench = false

[dependencies]
nu-ansi-term = "0.46.0"
nu-cmd-lang = { path = "../nu-cmd-lang", version = "0.76.1" }
nu-color-config = { path = "../nu-color-config", version = "0.76.1" }
nu-engine = { path = "../nu-engine", version = "0.76.1" }
nu-explore = { path = "../nu-explore", version = "0.76.1" }
nu-glob = { path = "../nu-glob", version = "0.76.1" }
nu-json = { path = "../nu-json", version = "0.76.1" }
nu-parser = { path = "../nu-parser", version = "0.76.1" }
nu-path = { path = "../nu-path", version = "0.76.1" }
nu-pretty-hex = { path = "../nu-pretty-hex", version = "0.76.1" }
nu-protocol = { path = "../nu-protocol", version = "0.76.1" }
nu-system = { path = "../nu-system", version = "0.76.1" }
nu-table = { path = "../nu-table", version = "0.76.1" }
nu-term-grid = { path = "../nu-term-grid", version = "0.76.1" }
nu-utils = { path = "../nu-utils", version = "0.76.1" }
reedline = { version = "0.16.0", features = ["bashisms", "sqlite"] }

# Potential dependencies for extras
Inflector = "0.11"
alphanumeric-sort = "1.4"
atty = "0.2"
base64 = "0.21"
byteorder = "1.4"
bytesize = "1.2"
calamine = "0.19"
chrono = { version = "0.4", features = ["std", "unstable-locales"], default-features = false }
chrono-humanize = "0.2"
chrono-tz = "0.8"
crossterm = "0.24.0"
csv = "1.2"
dialoguer = { default-features = false, version = "0.10" }
digest = { default-features = false, version = "0.10" }
dtparse = "1.3"
encoding_rs = "0.8"
fancy-regex = "0.11"
filesize = "0.2"
filetime = "0.2"
fs_extra = "1.3"
htmlescape = "0.3"
indexmap = { version = "1.9", features = ["serde-1"] }
indicatif = "0.17"
is-root = "0.1"
itertools = "0.10"
log = "0.4"
lscolors = { version = "0.12", features = ["crossterm"], default-features = false }
md5 = { package = "md-5", version = "0.10" }
mime = "0.3"
mime_guess = "2.0"
notify = "4.0.17"
num = { version = "0.4", optional = true }
num-format = { version = "0.4" }
num-traits = "0.2"
once_cell = "1.17"
open = "3.2.0"
pathdiff = "0.2"
powierza-coefficient = "1.0"
quick-xml = "0.27"
rand = "0.8"
rayon = "1.7"
regex = "1.7"
ureq = { version = "2.6", default-features = false, features = ["json", "charset", "native-tls", "gzip"] }
native-tls = "0.2"
roxmltree = "0.18"
rust-embed = "6.6"
same-file = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_urlencoded = "0.7"
serde_yaml = "0.9"
sha2 = "0.10"
# Disable default features b/c the default features build Git (very slow to compile)
percent-encoding = "2.2"
rusqlite = { version = "0.28", features = ["bundled"], optional = true }
sqlparser = { version = "0.32", features = ["serde"], optional = true }
sysinfo = "0.28"
tabled = "0.10"
terminal_size = "0.2"
titlecase = "2.2"
toml = "0.7"
unicode-segmentation = "1.10"
unicode-width = "0.1"
url = "2.3"
uuid = { version = "1.3", features = ["v4"] }
wax = { version = "0.5" }
which = { version = "4.4", optional = true }
print-positions = "0.6"

[target.'cfg(windows)'.dependencies]
winreg = "0.11"

[target.'cfg(unix)'.dependencies]
libc = "0.2"
umask = "2.0"
users = "0.11"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies.trash]
optional = true
version = "3.0"

[dependencies.polars]
features = [
	"arg_where",
	"checked_arithmetic",
	"concat_str",
	"cross_join",
	"csv-file",
	"cum_agg",
	"default",
	"dtype-categorical",
	"dtype-datetime",
	"dtype-struct",
	"dynamic_groupby",
	"ipc",
	"is_in",
	"json",
	"lazy",
	"object",
	"parquet",
	"random",
	"rolling_window",
	"rows",
	"serde",
	"serde-lazy",
	"strings",
	"strings",
	"to_dummies",
]
optional = true
version = "0.27"

[target.'cfg(windows)'.dependencies.windows]
features = ["Win32_Foundation", "Win32_Storage_FileSystem", "Win32_System_SystemServices"]
version = "0.44"

[features]
dataframe = ["num", "polars", "sqlparser"]
plugin = ["nu-parser/plugin"]
sqlite = ["rusqlite"]                      # TODO: given that rusqlite is included in reedline, should we just always include it?
trash-support = ["trash"]
which-support = ["which"]

[dev-dependencies]
nu-test-support = { path = "../nu-test-support", version = "0.76.1" }
mockito = "0.32"
dirs-next = "2.0"
hamcrest2 = "0.3"
proptest = "1.1"
quickcheck = "1.0"
quickcheck_macros = "1.0"
rstest = { version = "0.16", default-features = false }
