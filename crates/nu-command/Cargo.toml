[package]
authors = ["The Nushell Project Developers"]
description = "Nushell's built-in commands"
repository = "https://github.com/nushell/nushell/tree/main/crates/nu-command"
edition = "2021"
license = "MIT"
name = "nu-command"
version = "0.71.1"
build = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
nu-color-config = { path = "../nu-color-config", version = "0.71.1"  }
nu-engine = { path = "../nu-engine", version = "0.71.1"  }
nu-glob = { path = "../nu-glob", version = "0.71.1" }
nu-json = { path = "../nu-json", version = "0.71.1"  }
nu-parser = { path = "../nu-parser", version = "0.71.1"  }
nu-path = { path = "../nu-path", version = "0.71.1"  }
nu-pretty-hex = { path = "../nu-pretty-hex", version = "0.71.1"  }
nu-protocol = { path = "../nu-protocol", version = "0.71.1"  }
nu-system = { path = "../nu-system", version = "0.71.1"  }
nu-table = { path = "../nu-table", version = "0.71.1"  }
nu-term-grid = { path = "../nu-term-grid", version = "0.71.1"  }
nu-utils = { path = "../nu-utils", version = "0.71.1" }
nu-ansi-term = "0.46.0"
num-format = { version = "0.4.3" }

# Potential dependencies for extras
alphanumeric-sort = "1.4.4"
base64 = "0.13.0"
byteorder = "1.4.3"
bytesize = "1.1.0"
calamine = "0.18.0"
chrono = { version = "0.4.21", features = ["unstable-locales", "std"], default-features = false }
chrono-humanize = "0.2.1"
chrono-tz = "0.6.3"
crossterm = "0.24.0"
csv = "1.1.6"
dialoguer = { default-features = false, version = "0.9.0" }
digest = { default-features = false, version = "0.10.0" }
dtparse = "1.2.0"
eml-parser = "0.1.0"
encoding_rs = "0.8.30"
fancy-regex = "0.10.0"
filesize = "0.2.0"
filetime = "0.2.15"
fs_extra = "1.2.0"
htmlescape = "0.3.1"
ical = "0.7.0"
indexmap = { version="1.7", features=["serde-1"] }
Inflector = "0.11"
is-root = "0.1.2"
itertools = "0.10.0"
lazy_static = "1.4.0"
log = "0.4.14"
lscolors = { version = "0.12.0", features = ["crossterm"], default-features = false }
md5 = { package = "md-5", version = "0.10.0" }
meval = "0.2.0"
mime = "0.3.16"
notify = "4.0.17"
num = { version = "0.4.0", optional = true }
num-traits = "0.2.14"
pathdiff = "0.2.1"
powierza-coefficient = "1.0.1"
quick-xml = "0.23.0"
rand = "0.8"
rayon = "1.5.1"
reqwest = {version = "0.11", features = ["blocking", "json"] }
roxmltree = "0.14.0"
rust-embed = "6.3.0"
same-file = "1.0.6"
serde = { version="1.0.123", features=["derive"] }
serde_ini = "0.2.0"
serde_urlencoded = "0.7.0"
serde_yaml = "0.9.4"
sha2 = "0.10.0"
# Disable default features b/c the default features build Git (very slow to compile)
shadow-rs = { version = "0.16.1", default-features = false }
sysinfo = "0.26.2"
terminal_size = "0.2.1"
thiserror = "1.0.31"
titlecase = "2.0.0"
toml = "0.5.8"
unicode-segmentation = "1.8.0"
url = "2.2.1"
uuid = { version = "1.1.2", features = ["v4"] }
which = { version = "4.3.0", optional = true }
reedline = { version = "0.14.0", features = ["bashisms", "sqlite"]}
wax = { version =  "0.5.0" }
rusqlite = { version = "0.28.0", features = ["bundled"], optional = true }
sqlparser = { version = "0.23.0", features = ["serde"], optional = true }

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"

[target.'cfg(unix)'.dependencies]
umask = "2.0.0"
users = "0.11.0"
libc = "0.2"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies.trash]
version = "2.1.3"
optional = true

[dependencies.polars]
version = "0.25.0"
optional = true
features = [
	"arg_where",
	"checked_arithmetic",
	"concat_str",
	"cross_join",
	"csv-file",
	"cum_agg",
	"default",
	"dtype-datetime",
	"dtype-struct",
	"dtype-categorical",
	"dynamic_groupby",
	"ipc",
	"is_in",
	"json",
	"lazy",
	"object",
	"parquet",
	"random",
	"rolling_window",
	"rows",
	"serde",
	"serde-lazy",
	"strings",
	"strings",
	"to_dummies",
]

[target.'cfg(windows)'.dependencies.windows]
version = "0.42.0"
features = [
    "Win32_Foundation",
    "Win32_Storage_FileSystem",
	"Win32_System_SystemServices",
]

[features]
trash-support = ["trash"]
which-support = ["which"]
plugin = ["nu-parser/plugin"]
dataframe = ["polars", "num", "sqlparser"]
database = ["rusqlite"] # TODO: given that rusqlite is included in reedline, should we just always include it?

[build-dependencies]
shadow-rs = { version = "0.16.1", default-features = false }

[dev-dependencies]
nu-test-support = { path = "../nu-test-support", version = "0.71.1"  }

hamcrest2 = "0.3.0"
dirs-next = "2.0.0"
proptest = "1.0.0"
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
rstest = {version = "0.15.0", default-features = false}
