[package]
authors = ["The Nu Project Contributors"]
description = "CLI for nushell"
edition = "2018"
license = "MIT"
name = "nu-cli"
version = "0.19.0"

[lib]
doctest = false

[dependencies]
nu-data = {version = "0.19.0", path = "../nu-data"}
nu-errors = {version = "0.19.0", path = "../nu-errors"}
nu-parser = {version = "0.19.0", path = "../nu-parser"}
nu-plugin = {version = "0.19.0", path = "../nu-plugin"}
nu-protocol = {version = "0.19.0", path = "../nu-protocol"}
nu-source = {version = "0.19.0", path = "../nu-source"}
nu-table = {version = "0.19.0", path = "../nu-table"}
nu-test-support = {version = "0.19.0", path = "../nu-test-support"}
nu-value-ext = {version = "0.19.0", path = "../nu-value-ext"}

ansi_term = "0.12.1"
async-recursion = "0.3.1"
async-trait = "0.1.40"
base64 = "0.12.3"
bigdecimal = { version = "0.1.2", features = ["serde"] }
byte-unit = "4.0.9"
bytes = "0.5.6"
calamine = "0.16.1"
chrono = { version = "0.4.15", features = ["serde"] }
clap = "2.33.3"
codespan-reporting = "0.9.5"
csv = "1.1.3"
ctrlc = { version = "3.1.6", optional = true }
derive-new = "0.5.8"
directories = { version = "3.0.1", optional = true }
dirs = { version = "3.0.1", optional = true }
dtparse = "1.1.0"
dunce = "1.0.1"
eml-parser = "0.1.0"
filesize = "0.2.0"
fs_extra = "1.2.0"
futures = { version = "0.3.5", features = ["compat", "io-compat"] }
futures-util = "0.3.5"
futures_codec = "0.4.1"
getset = "0.1.1"
git2 = { version = "0.13.11", default_features = false, optional = true }
glob = "0.3.0"
htmlescape = "0.3.1"
ical = "0.6.0"
ichwh = { version = "0.3.4", optional = true }
indexmap = { version = "1.6.0", features = ["serde-1"] }
itertools = "0.9.0"
log = "0.4.11"
meval = "0.2.0"
natural = "0.5.0"
num-bigint = { version = "0.2.6", features = ["serde"] }
num-format = { version = "0.4.0", features = ["with-num-bigint"] }
num-traits = "0.2.12"
parking_lot = "0.11.0"
pin-utils = "0.1.0"
pretty-hex = "0.2.0"
ptree = { version = "0.3.0", optional = true }
query_interface = "0.3.5"
rand = "0.7.3"
regex = "1.3.9"
roxmltree = "0.13.0"
rust-embed = "5.6.0"
rustyline = "6.2.0"
serde = { version = "1.0.115", features = ["derive"] }
serde-hjson = "0.9.1"
serde_bytes = "0.11.5"
serde_ini = "0.2.0"
serde_json = "1.0.57"
serde_urlencoded = "0.7.0"
serde_yaml = "0.8.13"
sha2 = "0.9.1"
shellexpand = "2.0.0"
strip-ansi-escapes = "0.1.0"
tempfile = "3.1.0"
term = { version = "0.6.1", optional = true }
term_size = "0.3.2"
termcolor = "1.1.0"
toml = "0.5.6"
unicode-segmentation = "1.6.0"
uuid_crate = { package = "uuid", version = "0.8.1", features = ["v4"], optional = true }
which = { version = "4.0.2", optional = true }
zip = { version = "0.5.7", optional = true }

clipboard = { version = "0.5.0", optional = true }
encoding_rs = "0.8.24"
quick-xml = "0.18.1"
rayon = "1.4.0"
trash = { version = "1.1.1", optional = true }
url = "2.1.1"
Inflector = "0.11"

[target.'cfg(unix)'.dependencies]
users = "0.10.0"
umask = "1.0.0"

# TODO this will be possible with new dependency resolver
#   (currently on nightly behind -Zfeatures=itarget):
#   https://github.com/rust-lang/cargo/issues/7914
#[target.'cfg(not(windows))'.dependencies]
#num-format = {version = "0.4", features = ["with-system-locale"]}

[dependencies.rusqlite]
features = ["bundled", "blob"]
optional = true
version = "0.23.1"

[build-dependencies]
git2 = { version = "0.13.11", optional = true }


[dev-dependencies]
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"

[features]
clipboard-cli = ["clipboard"]
stable = []
trash-support = ["trash"]
